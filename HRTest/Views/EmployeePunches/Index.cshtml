@model IEnumerable<HRTest.Models.EmployeePunch>

@{
    ViewData["Title"] = "Index";
}

<h1 class="fw-bold text-center" style="color: #007bff;">Employee Punch</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Add New</a>
</p>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.EmployeeId)</th>
            <th>@Html.DisplayNameFor(model => model.Date)</th>
            <th>@Html.DisplayNameFor(model => model.PunchTime)</th>
            <th>@Html.DisplayNameFor(model => model.CreatedBy)</th>
            <th>@Html.DisplayNameFor(model => model.CreatedDate)</th>
            <th>@Html.DisplayNameFor(model => model.UpdatedBy)</th>
            <th>@Html.DisplayNameFor(model => model.UpdatedDate)</th>
            <th>@Html.DisplayNameFor(model => model.IsDeleted)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.EmployeeId)</td>
                <td>@Html.DisplayFor(modelItem => item.Date)</td>
                <td>@Html.DisplayFor(modelItem => item.PunchTime)</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedBy)</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                <td>@Html.DisplayFor(modelItem => item.UpdatedBy)</td>
                <td>@Html.DisplayFor(modelItem => item.UpdatedDate)</td>
                <td>@Html.DisplayFor(modelItem => item.IsDeleted)</td>
                <td>
                    <a asp-action="Edit" class="btn btn-success btn-sm mb-1" asp-route-id="@item.Id">Edit</a> |
                    @* <a asp-action="Details" class="btn btn-primary btn-sm mb-1" asp-route-id="@item.Id">Details</a> | *@
                    <a asp-action="Delete" class="btn btn-danger btn-sm mb-1" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="d-flex justify-content-between align-items-center">
    <div>
        Showing @((ViewBag.CurrentPage - 1) * ViewBag.PageSize + 1) to
        @(Math.Min(ViewBag.CurrentPage * ViewBag.PageSize, ViewBag.TotalRecords))
        of @ViewBag.TotalRecords records
    </div>

    <nav>
        <ul class="pagination">
            @if (ViewBag.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })">Previous</a>
                </li>
            }

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = ViewBag.PageSize })">@i</a>
                </li>
            }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>
